
import { FunctionCallEncoderInstance } from "../types/truffle-contracts";
import { toBN } from "./util/TestUtils";
  
const FunctionCallEncoder = artifacts.require("FunctionCallEncoder");

contract("FunctionCallEncoder", (accounts) => {
    let functionCallEncoder: FunctionCallEncoderInstance;
  
    before("Prepare State", async function () {
        functionCallEncoder = await FunctionCallEncoder.new();
    });
  
    it("Execute BNPL", async () => {

        const functionCall = {
            "to": "0xc2c862322e9c97d6244a3506655da95f05246fd8",
            "value": "4347053018386773593",
            "data": "0x760f2a0b00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000014e29b2de5cbb86fc8bad483e6dff38d58057e8000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000003c53d5b044bbb6590000000000000000000000000000000000000000000000000000000000000184769c0fbe00000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120000000000000000000000000ead3dd83ed1e107e02e1d0a307d4f1ba8a2af12d000000000000000000000000ead3dd83ed1e107e02e1d0a307d4f1ba8a2af12d00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000003c53d5b044bbb659000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000000010000000000000000000000006689679dab35fb3fc50bb4e5fd82c86a62a2cb8d000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000017630000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001d4da48b00000000"
        };

        const functionCallEncoded = await functionCallEncoder.encodeFunctionCall(functionCall);
        console.log('functionCallEncoded', functionCallEncoded);

        const functionCallSignedEncoded = await functionCallEncoder.encodeFunctionCallSignedMessage(functionCall);
        console.log('functionCallSignedEncoded', functionCallSignedEncoded);
    })
});